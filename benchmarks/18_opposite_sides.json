{
    "groupName": "Aur\u00e9lien & Florian",
    "solverName": "Target Assignment - Node Approach diamond + corridor",
    "objective": "timespan",
    "instance": "18_opposite_sides",
    "ret": true,
    "statistics": {
        "groudingTime": 0.13419508934020996,
        "solvingtime": 0.17610699999999999,
        "total": 0.31030208934021,
        "atoms": 5232.0,
        "rules": 63868.0
    },
    "model": "goalReached(1,31). goalReached(1,32). goalReached(1,33). goalReached(1,34). goalReached(1,35). goalReached(1,36). goalReached(1,37). goalReached(1,38). goalReached(1,39). goalReached(1,40). goalReached(1,41). goalReached(1,42). goalReached(1,43). goalReached(1,44). goalReached(1,45). goalReached(1,46). goalReached(1,47). goalReached(1,48). goalReached(1,49). goalReached(1,50). goalReached(2,50). goalReached(3,12). goalReached(3,13). goalReached(3,14). goalReached(3,15). goalReached(3,16). goalReached(3,17). goalReached(3,18). goalReached(3,19). goalReached(3,20). goalReached(3,21). goalReached(3,22). goalReached(3,23). goalReached(3,24). goalReached(3,25). goalReached(3,26). goalReached(3,27). goalReached(3,28). goalReached(3,29). goalReached(3,30). goalReached(3,31). goalReached(3,32). goalReached(3,33). goalReached(3,34). goalReached(3,35). goalReached(3,36). goalReached(3,37). goalReached(3,38). goalReached(3,39). goalReached(3,40). goalReached(3,41). goalReached(3,42). goalReached(3,43). goalReached(3,44). goalReached(3,45). goalReached(3,46). goalReached(3,47). goalReached(3,48). goalReached(3,49). goalReached(3,50). goalReached(4,13). goalReached(4,14). goalReached(4,15). goalReached(4,16). goalReached(4,17). goalReached(4,18). goalReached(4,19). goalReached(4,20). goalReached(4,21). goalReached(4,22). goalReached(4,23). goalReached(4,24). goalReached(4,25). goalReached(4,26). goalReached(4,27). goalReached(4,28). goalReached(4,29). goalReached(4,30). goalReached(4,31). goalReached(4,32). goalReached(4,33). goalReached(4,34). goalReached(4,35). goalReached(4,36). goalReached(4,37). goalReached(4,38). goalReached(4,39). goalReached(4,40). goalReached(4,41). goalReached(4,42). goalReached(4,43). goalReached(4,44). goalReached(4,45). goalReached(4,46). goalReached(4,47). goalReached(4,48). goalReached(4,49). goalReached(4,50). new_step(1,0,1,1). new_step(2,0,1,3). new_step(3,0,7,1). new_step(4,0,7,3). new_step(4,1,7,3). new_step(1,1,1,1). new_step(3,1,7,2). new_step(2,1,1,2). new_step(1,2,1,2). new_step(4,2,7,2). new_step(2,2,2,2). new_step(3,2,6,2). new_step(4,3,6,2). new_step(1,3,1,2). new_step(3,3,5,2). new_step(2,3,3,2). new_step(4,4,5,2). new_step(1,4,1,2). new_step(2,4,3,1). new_step(3,4,4,2). new_step(4,5,4,2). new_step(2,5,3,1). new_step(1,5,1,2). new_step(3,5,3,2). new_step(4,6,3,2). new_step(1,6,1,2). new_step(2,6,3,1). new_step(3,6,2,2). new_step(4,7,3,3). new_step(3,7,2,2). new_step(1,7,1,2). new_step(2,7,3,2). new_step(3,8,3,2). new_step(1,8,2,2). new_step(2,8,4,2). new_step(4,8,3,3). new_step(3,9,3,1). new_step(1,9,2,2). new_step(4,9,3,2). new_step(2,9,5,2). new_step(1,10,3,2). new_step(2,10,5,3). new_step(3,10,3,1). new_step(4,10,3,3). new_step(4,11,3,3). new_step(3,11,3,1). new_step(2,11,5,3). new_step(1,11,4,2). new_step(1,12,5,2). new_step(2,12,5,3). new_step(3,12,3,1). new_step(4,12,3,3). new_step(4,13,3,3). new_step(3,13,3,1). new_step(2,13,5,3). new_step(1,13,5,2). new_step(1,14,5,2). new_step(2,14,5,3). new_step(3,14,3,1). new_step(4,14,3,3). new_step(4,15,3,3). new_step(3,15,3,1). new_step(2,15,5,3). new_step(1,15,5,2). new_step(1,16,5,2). new_step(2,16,5,3). new_step(3,16,3,1). new_step(4,16,3,3). new_step(4,17,3,3). new_step(3,17,3,1). new_step(2,17,5,3). new_step(1,17,5,2). new_step(1,18,5,2). new_step(2,18,5,3). new_step(3,18,3,1). new_step(4,18,3,3). new_step(4,19,3,3). new_step(3,19,3,1). new_step(2,19,5,3). new_step(1,19,5,2). new_step(1,20,5,2). new_step(2,20,5,3). new_step(3,20,3,1). new_step(4,20,3,3). new_step(4,21,3,3). new_step(3,21,3,1). new_step(2,21,5,3). new_step(1,21,5,2). new_step(1,22,5,2). new_step(2,22,5,3). new_step(3,22,3,1). new_step(4,22,3,3). new_step(4,23,3,3). new_step(3,23,3,1). new_step(2,23,5,3). new_step(1,23,5,2). new_step(1,24,5,2). new_step(2,24,5,3). new_step(3,24,3,1). new_step(4,24,3,3). new_step(4,25,3,3). new_step(3,25,3,1). new_step(2,25,5,3). new_step(1,25,5,2). new_step(1,26,5,2). new_step(2,26,5,3). new_step(3,26,3,1). new_step(4,26,3,3). new_step(4,27,3,3). new_step(3,27,3,1). new_step(2,27,5,3). new_step(1,27,5,2). new_step(1,28,5,2). new_step(2,28,5,3). new_step(3,28,3,1). new_step(4,28,3,3). new_step(4,29,3,3). new_step(3,29,3,1). new_step(2,29,5,3). new_step(1,29,5,1). new_step(1,30,5,1). new_step(2,30,5,3). new_step(3,30,3,1). new_step(4,30,3,3). new_step(4,31,3,3). new_step(3,31,3,1). new_step(2,31,5,3). new_step(1,31,5,1). new_step(1,32,5,1). new_step(2,32,5,3). new_step(3,32,3,1). new_step(4,32,3,3). new_step(4,33,3,3). new_step(3,33,3,1). new_step(2,33,5,3). new_step(1,33,5,1). new_step(1,34,5,1). new_step(2,34,5,3). new_step(3,34,3,1). new_step(4,34,3,3). new_step(4,35,3,3). new_step(3,35,3,1). new_step(2,35,5,3). new_step(1,35,5,1). new_step(1,36,5,1). new_step(2,36,5,3). new_step(3,36,3,1). new_step(4,36,3,3). new_step(4,37,3,3). new_step(3,37,3,1). new_step(2,37,5,3). new_step(1,37,5,1). new_step(1,38,5,1). new_step(2,38,5,3). new_step(3,38,3,1). new_step(4,38,3,3). new_step(4,39,3,3). new_step(3,39,3,1). new_step(2,39,5,3). new_step(1,39,5,1). new_step(1,40,5,1). new_step(2,40,5,3). new_step(3,40,3,1). new_step(4,40,3,3). new_step(4,41,3,3). new_step(3,41,3,1). new_step(2,41,5,3). new_step(1,41,5,1). new_step(1,42,5,1). new_step(2,42,5,3). new_step(3,42,3,1). new_step(4,42,3,3). new_step(4,43,3,3). new_step(3,43,3,1). new_step(2,43,5,3). new_step(1,43,5,1). new_step(1,44,5,1). new_step(2,44,5,3). new_step(3,44,3,1). new_step(4,44,3,3). new_step(4,45,3,3). new_step(3,45,3,1). new_step(2,45,5,3). new_step(1,45,5,1). new_step(1,46,5,1). new_step(2,46,5,3). new_step(3,46,3,1). new_step(4,46,3,3). new_step(4,47,3,3). new_step(3,47,3,1). new_step(2,47,5,3). new_step(1,47,5,1). new_step(1,48,5,1). new_step(2,48,5,3). new_step(3,48,3,1). new_step(4,48,3,3). new_step(4,49,3,3). new_step(3,49,3,1). new_step(2,49,5,3). new_step(1,49,5,1). new_step(1,50,5,1). new_step(2,50,5,3). new_step(3,50,3,1). new_step(4,50,3,3). occurs(object(robot,1),action(move,(0,1)),2). occurs(object(robot,1),action(move,(1,0)),8). occurs(object(robot,1),action(move,(1,0)),10). occurs(object(robot,1),action(move,(1,0)),11). occurs(object(robot,1),action(move,(1,0)),12). occurs(object(robot,1),action(move,(0,-1)),29). occurs(object(robot,2),action(move,(0,-1)),1). occurs(object(robot,2),action(move,(1,0)),2). occurs(object(robot,2),action(move,(1,0)),3). occurs(object(robot,2),action(move,(0,-1)),4). occurs(object(robot,2),action(move,(0,1)),7). occurs(object(robot,2),action(move,(1,0)),8). occurs(object(robot,2),action(move,(1,0)),9). occurs(object(robot,2),action(move,(0,1)),10). occurs(object(robot,3),action(move,(0,1)),1). occurs(object(robot,3),action(move,(-1,0)),2). occurs(object(robot,3),action(move,(-1,0)),3). occurs(object(robot,3),action(move,(-1,0)),4). occurs(object(robot,3),action(move,(-1,0)),5). occurs(object(robot,3),action(move,(-1,0)),6). occurs(object(robot,3),action(move,(1,0)),8). occurs(object(robot,3),action(move,(0,-1)),9). occurs(object(robot,4),action(move,(0,-1)),2). occurs(object(robot,4),action(move,(-1,0)),3). occurs(object(robot,4),action(move,(-1,0)),4). occurs(object(robot,4),action(move,(-1,0)),5). occurs(object(robot,4),action(move,(-1,0)),6). occurs(object(robot,4),action(move,(0,1)),7). occurs(object(robot,4),action(move,(0,-1)),9). occurs(object(robot,4),action(move,(0,1)),10).",
    "additionnal": [
        2,
        176
    ]
}