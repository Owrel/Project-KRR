{
    "groupName": "Aur\u00e9lien & Florian",
    "solverName": "Target Assignment - Node Approach diamond + corridor",
    "objective": "timespan",
    "instance": "06_two_simultaneous_vertex_collisions",
    "ret": true,
    "statistics": {
        "groudingTime": 0.04119539260864258,
        "solvingtime": 0.057626,
        "total": 0.09882139260864257,
        "atoms": 3541.0,
        "rules": 14528.0
    },
    "model": "goalReached(1,50). goalReached(2,50). goalReached(3,50). goalReached(4,50). new_step(1,0,1,2). new_step(2,0,2,3). new_step(3,0,5,2). new_step(4,0,6,3). new_step(4,1,6,3). new_step(1,1,1,2). new_step(3,1,6,2). new_step(2,1,2,2). new_step(1,2,2,2). new_step(4,2,6,2). new_step(2,2,3,2). new_step(3,2,6,1). new_step(4,3,7,2). new_step(3,3,6,1). new_step(2,3,3,2). new_step(1,3,2,1). new_step(1,4,2,1). new_step(2,4,3,2). new_step(3,4,6,1). new_step(4,4,7,2). new_step(4,5,7,2). new_step(3,5,6,1). new_step(2,5,3,2). new_step(1,5,2,1). new_step(1,6,2,1). new_step(2,6,3,2). new_step(3,6,6,1). new_step(4,6,7,2). new_step(4,7,7,2). new_step(3,7,6,1). new_step(2,7,3,2). new_step(1,7,2,1). new_step(1,8,2,1). new_step(2,8,3,2). new_step(3,8,6,1). new_step(4,8,7,2). new_step(4,9,7,2). new_step(3,9,6,1). new_step(2,9,3,2). new_step(1,9,2,1). new_step(1,10,2,1). new_step(2,10,3,2). new_step(3,10,6,1). new_step(4,10,7,2). new_step(4,11,7,2). new_step(3,11,6,1). new_step(2,11,3,2). new_step(1,11,2,1). new_step(1,12,2,1). new_step(2,12,3,2). new_step(3,12,6,1). new_step(4,12,7,2). new_step(4,13,7,2). new_step(3,13,6,1). new_step(2,13,3,2). new_step(1,13,2,1). new_step(1,14,2,1). new_step(2,14,3,2). new_step(3,14,6,1). new_step(4,14,7,2). new_step(4,15,7,2). new_step(3,15,6,1). new_step(2,15,3,2). new_step(1,15,2,1). new_step(1,16,2,1). new_step(2,16,3,2). new_step(3,16,6,1). new_step(4,16,7,2). new_step(4,17,7,2). new_step(3,17,6,1). new_step(2,17,3,2). new_step(1,17,2,1). new_step(1,18,2,1). new_step(2,18,3,2). new_step(3,18,6,1). new_step(4,18,7,2). new_step(4,19,7,2). new_step(3,19,6,1). new_step(2,19,3,2). new_step(1,19,2,1). new_step(1,20,2,1). new_step(2,20,3,2). new_step(3,20,6,1). new_step(4,20,7,2). new_step(4,21,7,2). new_step(3,21,6,1). new_step(2,21,3,2). new_step(1,21,2,1). new_step(1,22,2,1). new_step(2,22,3,2). new_step(3,22,6,1). new_step(4,22,7,2). new_step(4,23,7,2). new_step(3,23,6,1). new_step(2,23,3,2). new_step(1,23,2,1). new_step(1,24,2,1). new_step(2,24,3,2). new_step(3,24,6,1). new_step(4,24,7,2). new_step(4,25,7,2). new_step(3,25,6,1). new_step(2,25,3,2). new_step(1,25,2,1). new_step(1,26,2,1). new_step(2,26,3,2). new_step(3,26,6,1). new_step(4,26,7,2). new_step(4,27,7,2). new_step(3,27,6,1). new_step(2,27,3,2). new_step(1,27,2,1). new_step(1,28,2,1). new_step(2,28,3,2). new_step(3,28,6,1). new_step(4,28,7,2). new_step(4,29,7,2). new_step(3,29,6,1). new_step(2,29,3,2). new_step(1,29,2,1). new_step(1,30,2,1). new_step(2,30,3,2). new_step(3,30,6,1). new_step(4,30,7,2). new_step(4,31,7,2). new_step(3,31,6,1). new_step(2,31,3,2). new_step(1,31,2,1). new_step(1,32,2,1). new_step(2,32,3,2). new_step(3,32,6,1). new_step(4,32,7,2). new_step(4,33,7,2). new_step(3,33,6,1). new_step(2,33,3,2). new_step(1,33,2,1). new_step(1,34,2,1). new_step(2,34,3,2). new_step(3,34,6,1). new_step(4,34,7,2). new_step(4,35,7,2). new_step(3,35,6,1). new_step(2,35,3,2). new_step(1,35,2,1). new_step(1,36,2,1). new_step(2,36,3,2). new_step(3,36,6,1). new_step(4,36,7,2). new_step(4,37,7,2). new_step(3,37,6,1). new_step(2,37,3,2). new_step(1,37,2,1). new_step(1,38,2,1). new_step(2,38,3,2). new_step(3,38,6,1). new_step(4,38,7,2). new_step(4,39,7,2). new_step(3,39,6,1). new_step(2,39,3,2). new_step(1,39,2,1). new_step(1,40,2,1). new_step(2,40,3,2). new_step(3,40,6,1). new_step(4,40,7,2). new_step(4,41,7,2). new_step(3,41,6,1). new_step(2,41,3,2). new_step(1,41,2,1). new_step(1,42,2,1). new_step(2,42,3,2). new_step(3,42,6,1). new_step(4,42,7,2). new_step(4,43,7,2). new_step(3,43,6,1). new_step(2,43,3,2). new_step(1,43,2,1). new_step(1,44,2,1). new_step(2,44,3,2). new_step(3,44,6,1). new_step(4,44,7,2). new_step(4,45,7,2). new_step(3,45,6,1). new_step(2,45,3,2). new_step(1,45,2,1). new_step(1,46,2,1). new_step(2,46,3,2). new_step(3,46,6,1). new_step(4,46,7,2). new_step(4,47,7,2). new_step(3,47,6,1). new_step(2,47,3,2). new_step(1,47,2,1). new_step(1,48,2,1). new_step(2,48,3,2). new_step(3,48,6,1). new_step(4,48,7,2). new_step(4,49,7,2). new_step(3,49,6,1). new_step(2,49,3,2). new_step(1,49,2,1). new_step(1,50,2,1). new_step(2,50,3,2). new_step(3,50,6,1). new_step(4,50,7,2). occurs(object(robot,1),action(move,(1,0)),2). occurs(object(robot,1),action(move,(0,-1)),3). occurs(object(robot,2),action(move,(0,-1)),1). occurs(object(robot,2),action(move,(1,0)),2). occurs(object(robot,3),action(move,(1,0)),1). occurs(object(robot,3),action(move,(0,-1)),2). occurs(object(robot,4),action(move,(0,-1)),2). occurs(object(robot,4),action(move,(1,0)),3).",
    "additionnal": [
        0,
        192
    ]
}