{
    "groupName": "Aur\u00e9lien & Florian",
    "solverName": "Target Assignment - Node Approach diamond + corridor",
    "objective": "timespan",
    "instance": "12_shelf_in_the_way",
    "ret": true,
    "statistics": {
        "groudingTime": 0.02787327766418457,
        "solvingtime": 0.037285,
        "total": 0.06515827766418457,
        "atoms": 2113.0,
        "rules": 8664.0
    },
    "model": "goalReached(1,50). goalReached(2,50). new_step(1,0,1,4). new_step(2,0,4,4). new_step(2,1,3,4). new_step(1,1,2,4). new_step(1,2,3,4). new_step(2,2,3,3). new_step(2,3,3,2). new_step(1,3,3,3). new_step(1,4,3,2). new_step(2,4,3,1). new_step(2,5,4,1). new_step(1,5,3,1). new_step(2,6,3,1). new_step(1,6,2,1). new_step(2,7,3,1). new_step(1,7,1,1). new_step(1,8,1,1). new_step(2,8,3,1). new_step(2,9,3,1). new_step(1,9,1,1). new_step(1,10,1,1). new_step(2,10,3,1). new_step(2,11,3,1). new_step(1,11,1,1). new_step(1,12,1,1). new_step(2,12,3,1). new_step(2,13,3,1). new_step(1,13,1,1). new_step(1,14,1,1). new_step(2,14,3,1). new_step(2,15,3,1). new_step(1,15,1,1). new_step(1,16,1,1). new_step(2,16,3,1). new_step(2,17,3,1). new_step(1,17,1,1). new_step(1,18,1,1). new_step(2,18,3,1). new_step(2,19,3,1). new_step(1,19,1,1). new_step(1,20,1,1). new_step(2,20,3,1). new_step(2,21,3,1). new_step(1,21,1,1). new_step(1,22,1,1). new_step(2,22,3,1). new_step(2,23,3,1). new_step(1,23,1,1). new_step(1,24,1,1). new_step(2,24,3,1). new_step(2,25,3,1). new_step(1,25,1,1). new_step(1,26,1,1). new_step(2,26,3,1). new_step(2,27,3,1). new_step(1,27,1,1). new_step(1,28,1,1). new_step(2,28,3,1). new_step(2,29,3,1). new_step(1,29,1,1). new_step(1,30,1,1). new_step(2,30,3,1). new_step(2,31,3,1). new_step(1,31,1,1). new_step(1,32,1,1). new_step(2,32,3,1). new_step(2,33,3,1). new_step(1,33,1,1). new_step(1,34,1,1). new_step(2,34,3,1). new_step(2,35,3,1). new_step(1,35,1,1). new_step(1,36,1,1). new_step(2,36,3,1). new_step(2,37,3,1). new_step(1,37,1,1). new_step(1,38,1,1). new_step(2,38,3,1). new_step(2,39,3,1). new_step(1,39,1,1). new_step(1,40,1,1). new_step(2,40,3,1). new_step(2,41,3,1). new_step(1,41,1,1). new_step(1,42,1,1). new_step(2,42,3,1). new_step(2,43,3,1). new_step(1,43,1,1). new_step(1,44,1,1). new_step(2,44,3,1). new_step(2,45,3,1). new_step(1,45,1,1). new_step(1,46,1,1). new_step(2,46,3,1). new_step(2,47,3,1). new_step(1,47,1,1). new_step(1,48,1,1). new_step(2,48,3,1). new_step(2,49,3,1). new_step(1,49,1,1). new_step(1,50,1,1). new_step(2,50,3,1). occurs(object(robot,1),action(move,(1,0)),1). occurs(object(robot,1),action(move,(1,0)),2). occurs(object(robot,1),action(move,(0,-1)),3). occurs(object(robot,1),action(move,(0,-1)),4). occurs(object(robot,1),action(move,(0,-1)),5). occurs(object(robot,1),action(move,(-1,0)),6). occurs(object(robot,1),action(move,(-1,0)),7). occurs(object(robot,2),action(move,(-1,0)),1). occurs(object(robot,2),action(move,(0,-1)),2). occurs(object(robot,2),action(move,(0,-1)),3). occurs(object(robot,2),action(move,(0,-1)),4). occurs(object(robot,2),action(move,(1,0)),5). occurs(object(robot,2),action(move,(-1,0)),6).",
    "additionnal": [
        1,
        89
    ]
}