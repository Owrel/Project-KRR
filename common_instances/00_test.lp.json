{
    "groupName": "Aur\u00e9lien & Florian",
    "solverName": "Target Assignment - Node Approach diamond + corridor",
    "objective": "timespan",
    "instance": "00_test",
    "ret": true,
    "statistics": {
        "groudingTime": 0.05681014060974121,
        "solvingtime": 0.07988600000000001,
        "total": 0.13669614060974122,
        "atoms": 3176.0,
        "rules": 24911.0
    },
    "model": "goalReached(1,50). goalReached(2,50). goalReached(3,4). new_step(1,0,3,1). new_step(2,0,2,2). new_step(3,0,3,3). new_step(2,1,2,2). new_step(1,1,3,1). new_step(3,1,3,2). new_step(1,2,3,2). new_step(2,2,2,2). new_step(3,2,4,2). new_step(1,3,4,2). new_step(2,3,3,2). new_step(3,3,5,2). new_step(1,4,5,2). new_step(2,4,4,2). new_step(3,4,5,3). new_step(3,5,5,3). new_step(1,5,5,1). new_step(2,5,5,2). new_step(2,6,5,2). new_step(1,6,5,1). new_step(3,6,5,3). new_step(3,7,5,3). new_step(1,7,5,1). new_step(2,7,5,2). new_step(2,8,5,2). new_step(1,8,5,1). new_step(3,8,5,3). new_step(3,9,5,3). new_step(1,9,5,1). new_step(2,9,5,2). new_step(2,10,5,2). new_step(1,10,5,1). new_step(3,10,5,3). new_step(3,11,5,3). new_step(1,11,5,1). new_step(2,11,5,2). new_step(2,12,5,2). new_step(1,12,5,1). new_step(3,12,5,3). new_step(3,13,5,3). new_step(1,13,5,1). new_step(2,13,5,2). new_step(2,14,5,2). new_step(1,14,5,1). new_step(3,14,5,3). new_step(3,15,5,3). new_step(1,15,5,1). new_step(2,15,5,2). new_step(2,16,5,2). new_step(1,16,5,1). new_step(3,16,5,3). new_step(3,17,5,3). new_step(1,17,5,1). new_step(2,17,5,2). new_step(2,18,5,2). new_step(1,18,5,1). new_step(3,18,5,3). new_step(3,19,5,3). new_step(1,19,5,1). new_step(2,19,5,2). new_step(2,20,5,2). new_step(1,20,5,1). new_step(3,20,5,3). new_step(3,21,5,3). new_step(1,21,5,1). new_step(2,21,5,2). new_step(2,22,5,2). new_step(1,22,5,1). new_step(3,22,5,3). new_step(3,23,5,3). new_step(1,23,5,1). new_step(2,23,5,2). new_step(2,24,5,2). new_step(1,24,5,1). new_step(3,24,5,3). new_step(3,25,5,3). new_step(1,25,5,1). new_step(2,25,5,2). new_step(2,26,5,2). new_step(1,26,5,1). new_step(3,26,5,3). new_step(3,27,5,3). new_step(1,27,5,1). new_step(2,27,5,2). new_step(2,28,5,2). new_step(1,28,5,1). new_step(3,28,5,3). new_step(3,29,5,3). new_step(1,29,5,1). new_step(2,29,5,2). new_step(2,30,5,2). new_step(1,30,5,1). new_step(3,30,5,3). new_step(3,31,5,3). new_step(1,31,5,1). new_step(2,31,5,2). new_step(2,32,5,2). new_step(1,32,5,1). new_step(3,32,5,3). new_step(3,33,5,3). new_step(1,33,5,1). new_step(2,33,5,2). new_step(2,34,5,2). new_step(1,34,5,1). new_step(3,34,5,3). new_step(3,35,5,3). new_step(1,35,5,1). new_step(2,35,5,2). new_step(2,36,5,2). new_step(1,36,5,1). new_step(3,36,5,3). new_step(3,37,5,3). new_step(1,37,5,1). new_step(2,37,5,2). new_step(2,38,5,2). new_step(1,38,5,1). new_step(3,38,5,3). new_step(3,39,5,3). new_step(1,39,5,1). new_step(2,39,5,2). new_step(2,40,5,2). new_step(1,40,5,1). new_step(3,40,5,3). new_step(3,41,5,3). new_step(1,41,5,1). new_step(2,41,5,2). new_step(2,42,5,2). new_step(1,42,5,1). new_step(3,42,5,3). new_step(3,43,5,3). new_step(1,43,5,1). new_step(2,43,5,2). new_step(2,44,5,2). new_step(1,44,5,1). new_step(3,44,5,3). new_step(3,45,5,3). new_step(1,45,5,1). new_step(2,45,5,2). new_step(2,46,5,2). new_step(1,46,5,1). new_step(3,46,5,3). new_step(3,47,5,3). new_step(1,47,5,1). new_step(2,47,5,2). new_step(2,48,5,2). new_step(1,48,5,1). new_step(3,48,5,3). new_step(3,49,5,3). new_step(1,49,5,1). new_step(2,49,5,2). new_step(2,50,5,2). new_step(1,50,5,1). new_step(3,50,5,3). occurs(object(robot,1),action(move,(0,1)),2). occurs(object(robot,1),action(move,(1,0)),3). occurs(object(robot,1),action(move,(1,0)),4). occurs(object(robot,1),action(move,(0,-1)),5). occurs(object(robot,2),action(move,(1,0)),3). occurs(object(robot,2),action(move,(1,0)),4). occurs(object(robot,2),action(move,(1,0)),5). occurs(object(robot,3),action(move,(0,-1)),1). occurs(object(robot,3),action(move,(1,0)),2). occurs(object(robot,3),action(move,(1,0)),3). occurs(object(robot,3),action(move,(0,1)),4).",
    "additionnal": [
        0,
        93
    ]
}